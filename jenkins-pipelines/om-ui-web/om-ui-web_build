/* groovylint-disable NestedBlockDepth */
/* groovylint-disable-next-line CompileStatic */
pipeline {
    agent any
    environment {
        DOCKERHUB_CREDENTIALS = credentials('b3cecchini-dockerhub')
        DOCKER_IMAGE = 'b3cecchini/om-ui-web'
        API_BASE_URL = credentials('api-base-url')
        ENV_FILE_PATH = 'src/environments/environment.production.ts'
    }
    stages {
        stage('Login to DockerHub'){
            steps {
                powershell '''
                    docker login -u $env:DOCKERHUB_CREDENTIALS_USR -p $env:DOCKERHUB_CREDENTIALS_PSW
                '''
            }
        }
        stage('Checkout') {
            steps {
                checkout scmGit(branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[credentialsId: 'e0574566-962e-44ee-aed6-82d6648901bc', url: 'https://github.com/FtownDev/om-ui-web.git']])
            }
        }
        stage('Token Replace'){
            steps {
                powershell '''
                (Get-Content $env:ENV_FILE_PATH) -replace '#{API_BASE_URL}#', $env:API_BASE_URL | Set-Content $env:ENV_FILE_PATH
                '''
            }
        }
        stage('Build Docker Image') {
            steps {
                script {
                    bat "docker build -t ${DOCKER_IMAGE}:${env.BUILD_NUMBER} ."
                    bat "docker tag ${DOCKER_IMAGE}:${env.BUILD_NUMBER} ${DOCKER_IMAGE}:latest"
                }
            }
        }
        stage('Publish Docker Image') {
            steps {
                script {
                    bat "docker push ${DOCKER_IMAGE}:${env.BUILD_NUMBER}"
                    bat "docker push ${DOCKER_IMAGE}:latest"
                }
            }
        }
    }
    post {
        always {
            bat "docker logout"
        }
    }
}